var tipuesearch = {"pages": [{'title': 'About', 'text': '倉儲 \xa0 網站 \n 40723217 組長 nfu40723217\xa0 第1個 \n 40923219 nfu 40923219\xa0 第2個 \n 40923225 nfu40923225  第3個 \n 40923241 nfu40923241  第4個 \n 40923246 40923246  第5個 \n 40971219 40971219\xa0 第6個 \n 40971220 40971220\xa0 第7個 \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'group', 'text': '變成學號的地方代表他沒填excel表單 \n 40723217 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg11 \xa0 (repo) \xa0 pj2bg1 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40732331 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg28 \xa0 (repo) \xa0 40732331 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 40923115 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg26 \xa0 (repo) \xa0 pj2bg15 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 40923130 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg26 \xa0 (repo) \xa0 pj2bg15 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 40923219 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg16 \xa0 (repo) \xa0 pj2bg1 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40923225 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg16 \xa0 (repo) \xa0 pj2bg1 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40923235 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg26 \xa0 (repo) \xa0 pj2bg15 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 40923241 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg11 \xa0 (repo) \xa0 pj2bg14 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40923246 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg16 \xa0 (repo) \xa0 pj2bg1 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40971219 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg4 \xa0 (repo) \xa0 pj2bg14 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 40971220 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg4 \xa0 (repo) \xa0 pj2bg14 \xa0 (repo) \xa0 pj3bg1  \xa0 (repo) \xa0 \n 41023201 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg13 \xa0 (repo) \xa0 pj2bg4 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023202 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg12 \xa0 (repo) \xa0 pj2bg8 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 41023203 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg9 \xa0 (repo) \xa0 pj2bg2 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023204 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg8 \xa0 (repo) \xa0 pj2bg2 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023205 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg8 \xa0 (repo) \xa0 pj2bg2 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023206 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg9 \xa0 (repo) \xa0 pj2bg2 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023207 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg1 \xa0 (repo) \xa0 pj2bg13 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023208 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg1 \xa0 (repo) \xa0 pj2bg13 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023210 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg3 \xa0 (repo) \xa0 pj2bg13 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n 41023211 \xa0 resume \xa0 football \xa0 (repo) \xa0 41023211 \xa0 (repo) \xa0 41023211 \xa0 (repo) \xa0 pj3bg8  \xa0 (repo) \xa0 \n 41023212 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg18 \xa0 (repo) \xa0 pj2bg8 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 41023213 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg24 \xa0 (repo) \xa0 pj2bg5 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023215 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg20 \xa0 (repo) \xa0 pj2bg4 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023216 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg25 \xa0 (repo) \xa0 pj2bg5 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023217 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg20 \xa0 (repo) \xa0 pj2bg4 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023218 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg24 \xa0 (repo) \xa0 pj2bg5 \xa0 (repo) \xa0 pg3bg7  \xa0 (repo) \xa0 \n 41023219 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg5 \xa0 (repo) \xa0 pj2bg7 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023220 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg14 \xa0 (repo) \xa0 pj2bg6 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023221 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg22 \xa0 (repo) \xa0 pj2bg7 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023222 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg5 \xa0 (repo) \xa0 pj2bg7 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023224 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg13 \xa0 (repo) \xa0 pj2bg4 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023225 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg25 \xa0 (repo) \xa0 pj2bg5 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023226 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg15 \xa0 (repo) \xa0 pj2bg6 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023228 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg22 \xa0 (repo) \xa0 pj2bg7 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023229 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg18 \xa0 (repo) \xa0 pj2bg8 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 41023230 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg30 \xa0 (repo) \xa0 pj2bg9 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023231 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg29 \xa0 (repo) \xa0 pj2bg9 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023232 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg30 \xa0 (repo) \xa0 pj2bg9 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023233 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg15 \xa0 (repo) \xa0 pj2bg6 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023234 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg6 \xa0 (repo) \xa0 pj2bg12 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023236 \xa0 resume \xa0 football \xa0 (repo) \xa0 pjbg17 \xa0 (repo) \xa0 pj2bg10 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023237 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg21 \xa0 (repo) \xa0 pj2bg11 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023238 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg19 \xa0 (repo) \xa0 pj2bg16 \xa0 (repo) \xa0 pj3bg8  \xa0 (repo) \xa0 \n 41023239 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg8 \xa0 (repo) \xa0 pj2bg3 \xa0 (repo) \xa0 pj3bg8  \xa0 (repo) \xa0 \n 41023240 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg7 \xa0 (repo) \xa0 pj2bg10 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023241 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg7 \xa0 (repo) \xa0 pj2bg10 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023242 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg12 \xa0 (repo) \xa0 pj2bg8 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 41023243 \xa0 resume \xa0 football \xa0 (repo) \xa0 41023243 \xa0 (repo) \xa0 41023243 \xa0 (repo) \xa0   \xa0 (repo) \xa0 \n 41023244 \xa0 resume \xa0 football \xa0 (repo) \xa0 41023244 \xa0 (repo) \xa0 41023244 \xa0 (repo) \xa0 pj3bg2  \xa0 (repo) \xa0 \n 41023245 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg27 \xa0 (repo) \xa0 pj2bg11 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023246 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg19 \xa0 (repo) \xa0 pj2bg16 \xa0 (repo) \xa0 pj3bg8  \xa0 (repo) \xa0 \n 41023247 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg6 \xa0 (repo) \xa0 pj2bg12 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023248 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg27 \xa0 (repo) \xa0 pj2bg11 \xa0 (repo) \xa0 pj3bg7  \xa0 (repo) \xa0 \n 41023249 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg23 \xa0 (repo) \xa0 pj2bg3 \xa0 (repo) \xa0 pj3bg8  \xa0 (repo) \xa0 \n 41023250 \xa0 resume \xa0 football \xa0 (repo) \xa0 41023250 \xa0 (repo) \xa0 41023250 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023251 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg2 \xa0 (repo) \xa0 pj2bg12 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023252 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg23 \xa0 (repo) \xa0 pj2bg3 \xa0 (repo) \xa0 pj3bg5  \xa0 (repo) \xa0 \n 41023253 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg10 \xa0 (repo) \xa0 pj2bg6 \xa0 (repo) \xa0 pj3bg3  \xa0 (repo) \xa0 \n 41023254 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg2 \xa0 (repo) \xa0 pj2bg12 \xa0 (repo) \xa0 pj3bg4  \xa0 (repo) \xa0 \n 41023255 \xa0 resume \xa0 football \xa0 (repo) \xa0 pj1bg3 \xa0 (repo) \xa0 pj2bg13 \xa0 (repo) \xa0 pj3bg6  \xa0 (repo) \xa0 \n \n 表格有錯，修正中 \n \n \n \n \n cd2023 2b \n \n \n resume \n \n \n \n soccer \n \n \n \n pj1 \n \n \n \n pj2 \n \n \n \n pj3 \n \n \n \n \n \n 40723217 \n \n \n 40723217 \n \n \n (repo) \n \n \n 40723217 \n \n \n (repo) \n \n \n pj1bg11 \n \n \n (rope) \n \n \n pj2bg1 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40732331 \n \n \n 40732331 \n \n \n (repo) \n \n \n 40732331 \n \n \n (repo) \n \n \n pj1bg28 \n \n \n (rope) \n \n \n 40732331 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 40923115 \n \n \n 40923115 \n \n \n (repo) \n \n \n 40923115 \n \n \n (repo) \n \n \n pj1bg26 \n \n \n (rope) \n \n \n pj2bg15 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 40923130 \n \n \n 40923130 \n \n \n (repo) \n \n \n 40923130 \n \n \n (repo) \n \n \n pj1bg26 \n \n \n (rope) \n \n \n pj2bg15 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 40923219 \n \n \n 40923219 \n \n \n (repo) \n \n \n 40923219 \n \n \n (repo) \n \n \n pj1bg16 \n \n \n (rope) \n \n \n pj2bg1 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40923225 \n \n \n 40923225 \n \n \n (repo) \n \n \n 40923225 \n \n \n (repo) \n \n \n pj1bg16 \n \n \n (rope) \n \n \n pj2bg1 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40923235 \n \n \n 40923235 \n \n \n (repo) \n \n \n 40923235 \n \n \n (repo) \n \n \n pj1bg26 \n \n \n (rope) \n \n \n pj2bg15 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 40923241 \n \n \n 40923241 \n \n \n (repo) \n \n \n 40923241 \n \n \n (repo) \n \n \n pj1bg11 \n \n \n (rope) \n \n \n pj2bg14 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40923246 \n \n \n 40923246 \n \n \n (repo) \n \n \n 40923246 \n \n \n (repo) \n \n \n pj1bg16 \n \n \n (rope) \n \n \n pj2bg1 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40971219 \n \n \n 40971219 \n \n \n (repo) \n \n \n 40971219 \n \n \n (repo) \n \n \n pj1bg4 \n \n \n (rope) \n \n \n pj2bg14 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 40971220 \n \n \n 40971220 \n \n \n (repo) \n \n \n 40971220 \n \n \n (repo) \n \n \n pj1bg4 \n \n \n (rope) \n \n \n pj2bg14 \n \n \n (rope) \n \n \n pj3bg1 \n \n \n (rope) \n \n \n \n \n 41023201 \n \n \n 41023201 \n \n \n (repo) \n \n \n 41023201 \n \n \n (repo) \n \n \n pj1bg13 \n \n \n (rope) \n \n \n pj2bg4 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023202 \n \n \n 41023202 \n \n \n (repo) \n \n \n 41023202 \n \n \n (repo) \n \n \n pj1bg12 \n \n \n (rope) \n \n \n pj2bg8 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 41023203 \n \n \n 41023203 \n \n \n (repo) \n \n \n 41023203 \n \n \n (repo) \n \n \n pj1bg9 \n \n \n (rope) \n \n \n pj2bg2 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n \n \n 41023204 \n \n \n 41023204 \n \n \n (repo) \n \n \n 41023204 \n \n \n (repo) \n \n \n pj2bg2 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n 41023204 \n \n \n (rope) \n \n \n \n \n 41023205 \n \n \n 41023205 \n \n \n (repo) \n \n \n 41023205 \n \n \n (repo) \n \n \n pj2bg2 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n 41023205 \n \n \n (rope) \n \n \n \n \n 41023206 \n \n \n 41023206 \n \n \n (repo) \n \n \n 41023206 \n \n \n (repo) \n \n \n pj1bg9 \n \n \n (rope) \n \n \n pj2bg2 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n \n \n 41023207 \n \n \n 41023207 \n \n \n (repo) \n \n \n 41023207 \n \n \n (repo) \n \n \n pj1bg1 \n \n \n (rope) \n \n \n pj2bg13 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n \n \n 41023208 \n \n \n 41023208 \n \n \n (repo) \n \n \n 41023208 \n \n \n (repo) \n \n \n pj2bg13 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n 41023208 \n \n \n (rope) \n \n \n \n \n 41023210 \n \n \n 41023210 \n \n \n (repo) \n \n \n 41023210 \n \n \n (repo) \n \n \n pj1bg3 \n \n \n (rope) \n \n \n pj1bg13 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n \n \n 41023211 \n \n \n 41023211 \n \n \n (repo) \n \n \n 41023211 \n \n \n (repo) \n \n \n 41023211 \n \n \n (rope) \n \n \n pj3bg8 \n \n \n (rope) \n \n \n 41023211 \n \n \n (rope) \n \n \n \n \n 41023212 \n \n \n 41023212 \n \n \n (repo) \n \n \n 41023212 \n \n \n (repo) \n \n \n pj1bg18 \n \n \n (rope) \n \n \n pj2bg8 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 41023213 \n \n \n 41023213 \n \n \n (repo) \n \n \n 41023213 \n \n \n (repo) \n \n \n pj1bg24 \n \n \n (rope) \n \n \n pj2bg5 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023215 \n \n \n 41023215 \n \n \n (repo) \n \n \n 41023215 \n \n \n (repo) \n \n \n pj1bg20 \n \n \n (rope) \n \n \n pj2bg4 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023216 \n \n \n 41023216 \n \n \n (repo) \n \n \n 41023216 \n \n \n (repo) \n \n \n pj1bg25 \n \n \n (rope) \n \n \n pj2bg5 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023217 \n \n \n 41023217 \n \n \n (repo) \n \n \n 41023217 \n \n \n (repo) \n \n \n pj1bg20 \n \n \n (rope) \n \n \n pj2bg4 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023218 \n \n \n 41023218 \n \n \n (repo) \n \n \n 41023218 \n \n \n (repo) \n \n \n pj1bg24 \n \n \n (rope) \n \n \n pj2bg5 \n \n \n (rope) \n \n \n pg3bg7 \n \n \n (rope) \n \n \n \n \n 41023219 \n \n \n 41023219 \n \n \n (repo) \n \n \n 41023219 \n \n \n (repo) \n \n \n pj2bg7 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n 41023219 \n \n \n (rope) \n \n \n \n \n 41023220 \n \n \n 41023220 \n \n \n (repo) \n \n \n 41023220 \n \n \n (repo) \n \n \n pj1bg14 \n \n \n (rope) \n \n \n pj2bg6 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n \n \n 41023221 \n \n \n 41023221 \n \n \n (repo) \n \n \n 41023221 \n \n \n (repo) \n \n \n pj1bg22 \n \n \n (rope) \n \n \n pj2bg7 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023222 \n \n \n 41023222 \n \n \n (repo) \n \n \n 41023222 \n \n \n (repo) \n \n \n pj1bg5 \n \n \n (rope) \n \n \n pj2bg7 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023224 \n \n \n 41023224 \n \n \n (repo) \n \n \n 41023224 \n \n \n (repo) \n \n \n pj1bg13 \n \n \n (rope) \n \n \n pj2bg4 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023225 \n \n \n 41023225 \n \n \n (repo) \n \n \n 41023225 \n \n \n (repo) \n \n \n pj1bg25 \n \n \n (rope) \n \n \n pj2bg5 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023226 \n \n \n 41023226 \n \n \n (repo) \n \n \n 41023226 \n \n \n (repo) \n \n \n pj1bg15 \n \n \n (rope) \n \n \n pj2bg6 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n \n \n 41023228 \n \n \n 41023228 \n \n \n (repo) \n \n \n 41023228 \n \n \n (repo) \n \n \n pj2bg7 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n 41023228 \n \n \n (rope) \n \n \n \n \n 41023229 \n \n \n 41023229 \n \n \n (repo) \n \n \n 41023229 \n \n \n (repo) \n \n \n pj2bg8 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n 41023229 \n \n \n (rope) \n \n \n \n \n 41023230 \n \n \n 41023230 \n \n \n (repo) \n \n \n 41023230 \n \n \n (repo) \n \n \n pj1bg30 \n \n \n (rope) \n \n \n pj2bg9 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n \n \n 41023231 \n \n \n 41023231 \n \n \n (repo) \n \n \n 41023231 \n \n \n (repo) \n \n \n pj2bg9 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n 41023231 \n \n \n (rope) \n \n \n \n \n 41023232 \n \n \n 41023232 \n \n \n (repo) \n \n \n 41023232 \n \n \n (repo) \n \n \n pj2bg9 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n 41023232 \n \n \n (rope) \n \n \n \n \n 41023233 \n \n \n 41023233 \n \n \n (repo) \n \n \n 41023233 \n \n \n (repo) \n \n \n pj1bg15 \n \n \n (rope) \n \n \n pj2bg6 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n \n \n 41023234 \n \n \n 41023234 \n \n \n (repo) \n \n \n 41023234 \n \n \n (repo) \n \n \n pj1bg6 \n \n \n (rope) \n \n \n pj2bg12 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023236 \n \n \n 41023236 \n \n \n (repo) \n \n \n 41023236 \n \n \n (repo) \n \n \n pjbg17 \n \n \n (rope) \n \n \n pj2bg10 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023237 \n \n \n 41023237 \n \n \n (repo) \n \n \n 41023237 \n \n \n (repo) \n \n \n pj1bg21 \n \n \n (rope) \n \n \n pj2bg11 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023238 \n \n \n 41023238 \n \n \n (repo) \n \n \n 41023238 \n \n \n (repo) \n \n \n pj1bg19 \n \n \n (rope) \n \n \n pj2bg16 \n \n \n (rope) \n \n \n pj3bg8 \n \n \n (rope) \n \n \n \n \n 41023239 \n \n \n 41023239 \n \n \n (repo) \n \n \n 41023239 \n \n \n (repo) \n \n \n pj2bg3 \n \n \n (rope) \n \n \n pj3bg8 \n \n \n (rope) \n \n \n 41023239 \n \n \n (rope) \n \n \n \n \n 41023240 \n \n \n 41023240 \n \n \n (repo) \n \n \n 41023240 \n \n \n (repo) \n \n \n pj1bg7 \n \n \n (rope) \n \n \n pj2bg10 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023241 \n \n \n 41023241 \n \n \n (repo) \n \n \n 41023241 \n \n \n (repo) \n \n \n 41023241 \n \n \n (rope) \n \n \n pj1bg7 \n \n \n (rope) \n \n \n pj2bg10 pj3bg2 \n \n \n (rope) \n \n \n \n \n 41023242 \n \n \n 41023242 \n \n \n (repo) \n \n \n 41023242 \n \n \n (repo) \n \n \n pj1bg12 \n \n \n (rope) \n \n \n pj2bg8 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n \n \n 41023243 \n \n \n 41023243 \n \n \n (repo) \n \n \n 41023243 \n \n \n (repo) \n \n \n 41023243 \n \n \n (rope) \n \n \n 41023243 \n \n \n (rope) \n \n \n 41023243 \n \n \n (rope) \n \n \n \n \n 41023244 \n \n \n 41023244 \n \n \n (repo) \n \n \n 41023244 \n \n \n (repo) \n \n \n 41023244 \n \n \n (rope) \n \n \n pj3bg2 \n \n \n (rope) \n \n \n 41023244 \n \n \n (rope) \n \n \n \n \n 41023245 \n \n \n 41023245 \n \n \n (repo) \n \n \n 41023245 \n \n \n (repo) \n \n \n pj1bg27 \n \n \n (rope) \n \n \n pj2bg11 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023246 \n \n \n 41023246 \n \n \n (repo) \n \n \n 41023246 \n \n \n (repo) \n \n \n pj1bg19 \n \n \n (rope) \n \n \n pj2bg16 \n \n \n (rope) \n \n \n pj3bg8 \n \n \n (rope) \n \n \n \n \n 41023247 \n \n \n 41023247 \n \n \n (repo) \n \n \n 41023247 \n \n \n (repo) \n \n \n pj1bg6 \n \n \n (rope) \n \n \n pj2bg12 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023248 \n \n \n 41023248 \n \n \n (repo) \n \n \n 41023248 \n \n \n (repo) \n \n \n pj1bg27 \n \n \n (rope) \n \n \n pj2bg11 \n \n \n (rope) \n \n \n pj3bg7 \n \n \n (rope) \n \n \n \n \n 41023249 \n \n \n 41023249 \n \n \n (repo) \n \n \n 41023249 \n \n \n (repo) \n \n \n pj1bg23 \n \n \n (rope) \n \n \n pj2bg3 \n \n \n (rope) \n \n \n pj3bg8 \n \n \n (rope) \n \n \n \n \n 41023250 \n \n \n 41023250 \n \n \n (repo) \n \n \n 41023250 \n \n \n (repo) \n \n \n 41023250 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n 41023250 \n \n \n (rope) \n \n \n \n \n 41023251 \n \n \n 41023251 \n \n \n (repo) \n \n \n 41023251 \n \n \n (repo) \n \n \n pj1bg2 \n \n \n (rope) \n \n \n pj2bg12 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023252 \n \n \n 41023252 \n \n \n (repo) \n \n \n 41023252 \n \n \n (repo) \n \n \n pj2bg3 \n \n \n (rope) \n \n \n pj3bg5 \n \n \n (rope) \n \n \n 41023252 \n \n \n (rope) \n \n \n \n \n 41023253 \n \n \n 41023253 \n \n \n (repo) \n \n \n 41023253 \n \n \n (repo) \n \n \n pj2bg6 \n \n \n (rope) \n \n \n pj3bg3 \n \n \n (rope) \n \n \n 41023253 \n \n \n (rope) \n \n \n \n \n 41023254 \n \n \n 41023254 \n \n \n (repo) \n \n \n 41023254 \n \n \n (repo) \n \n \n pj1bg2 \n \n \n (rope) \n \n \n pj2bg12 \n \n \n (rope) \n \n \n pj3bg4 \n \n \n (rope) \n \n \n \n \n 41023255 \n \n \n 41023255 \n \n \n (repo) \n \n \n 41023255 \n \n \n (repo) \n \n \n pj1bg3 \n \n \n (rope) \n \n \n pj2bg13 \n \n \n (rope) \n \n \n pj3bg6 \n \n \n (rope) \n \n \n \n \n \xa0 \n', 'tags': '', 'url': 'group.html'}, {'title': 'pj3', 'text': '40723217 林立翔 \n 全體操控測試 \n \n 40923246 蕭仲佑 \n 測試轉盤(進球加分設錯) \n \n 測試偵測球員與進球顯示板 \n \n 簡報.pdf \n 報告.pdf \n', 'tags': '', 'url': 'pj3.html'}, {'title': '程式', 'text': 'function sysCall_init()\n    bubbleRob1 = sim.getObject(\'./bubbleRob1\')\n    bubbleRob2 = sim.getObject(\'./bubbleRob2\')\n    bubbleRob3 = sim.getObject(\'./bubbleRob3\')\n    bubbleRob4 = sim.getObject(\'./bubbleRob4\')\n    bubbleRob5 = sim.getObject(\'./bubbleRob5\')\n    bubbleRob6 = sim.getObject(\'./bubbleRob6\')\n    bubbleRob7 = sim.getObject(\'./bubbleRob7\')\n    bubbleRob8 = sim.getObject(\'./bubbleRob8\')\n    sensor = sim.getObject(\'./sensor\')\n    sensor2 = sim.getObject(\'./sensor2\')\n    ball = sim.getObject(\'./ball\')\n    \n    local math = require("math")\n    joint1 = sim.getObject(\'./joint1\')\n    joint2 = sim.getObject(\'./joint2\')\n    joint3 = sim.getObject(\'./joint3\')\n    joint4 = sim.getObject(\'./joint4\')\n    r1 = 360\n    r2 = 360\n    r3 = 360\n    r4 = 360\n    sim.setJointTargetPosition(joint1, math.rad(r1+180))\n    sim.setJointTargetPosition(joint2, math.rad(r2+180))\n    sim.setJointTargetPosition(joint3, math.rad(r3+180))\n    sim.setJointTargetPosition(joint4, math.rad(r4+180))\n    bubbleRobHandles = {}\n    leftHandles = {}\n    rightHandles = {}\n    ballHandle = -1\n    ballHandle = sim.getObjectHandle(\'./ball\')\n    cuboidHandle = sim.getObjectHandle(\'./Cuboid\')\n    number = 0\n    \n    pos1 = {0.5,1,0.2}\n    pos2 = {1,0.5,0.2}\n    pos3 = {1,-0.5,0.2}\n    pos4 = {0.5,-1,0.2}\n    pos5 = {-0.5,-1,0.2}\n    pos6 = {-1,-0.5,0.2}\n    pos7 = {-1,0.5,0.2}\n    pos8 = {-0.5,1,0.2}\n    posS = {0,0,0.2}\n    ang1 = {1.57,0,0}\n    ang2 = {0,0,3.14}\n    ang3 = {0,-1.57,-1.57}\n    ang4 = {0,0,0}\n    bubbleRobBase = 4\n    \n    score1 = 0\n    score2 = 0\n    score3 = 0\n    score4 = 0\n    count = 60000\n    count1 = 0\n    count2 = 0\n    score5 = 99\n    score6 = 0\n    score7 = 0\n    score8 = 1\n    s0={1,1,1,1,1,0,1}\n    s1={0,0,1,1,0,0,0}\n    s2={0,1,1,0,1,1,1}\n    s3={0,0,1,1,1,1,1}\n    s4={1,0,1,1,0,1,0}\n    s5={1,0,0,1,1,1,1}\n    s6={1,1,0,1,1,1,1}\n    s7={0,0,1,1,1,0,0}\n    s8={1,1,1,1,1,1,1}\n    s9={1,0,1,1,1,1,1}\n    s={s0,s1,s2,s3,s4,s5,s6,s7,s8,s9}\n    for j = 0,6,1 do\n     a = sim.getObject(\'./_G[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n        else\n            sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n     b = sim.getObject(\'./G_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n        else\n            sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n     d = sim.getObject(\'./_R[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(d, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n        else\n            sim.setShapeColor(d, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n     c = sim.getObject(\'./R_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(c, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n        else\n            sim.setShapeColor(c, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local g = sim.getObject(\'./_C[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n        else\n            sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local h = sim.getObject(\'./C_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(h, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n        else\n            sim.setShapeColor(h, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local e = sim.getObject(\'./__C[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n        else\n            sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local f = sim.getObject(\'./_C_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n        else\n            sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local ng = sim.getObject(\'./nG_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n        else\n            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local n = sim.getObject(\'./N_[\'..j..\']\')\n            sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n    end\n    for go = 0,14,1 do\n        local goal = sim.getObject(\'./goal_[\'..go..\']\')\n            sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n    end\n    _g_=sim.getObject(\'./_nG_\')\n        sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n    for k = 1, 8 do\n        bubbleRobHandles[k] = sim.getObjectHandle(\'./bubbleRob\'..k)\n        leftHandles[k] = sim.getObjectHandle(\'./leftWheel\'..k)\n        rightHandles[k] = sim.getObjectHandle(\'./rightWheel\'..k)\n    end\nend\nfunction sysCall_actuation()\n    result = sim.readProximitySensor(sensor)\n    for k = 1,8,1 do\n        Handle = sim.checkCollision(bubbleRobHandles[k], ballHandle)\n        if Handle ~= 0 then\n            number = k\n            setDisplayDigit(k, k <= 4)\n            break\n        end\n    end\n    for k = 1,8,1 do\n        Handle = sim.checkCollision(leftHandles[k], ballHandle)\n        if Handle ~= 0 then\n            number = k\n            setDisplayDigit(k, k <= 4)\n            break\n        end\n    end \n    for k = 1,8,1 do\n        Handle = sim.checkCollision(rightHandles[k], ballHandle)\n        if Handle ~= 0 then\n            number = k\n            setDisplayDigit(k, k <= 4)\n            break\n        end\n    end\n    for k = 1,8,1 do\n        Handle2 = sim.checkCollision(cuboidHandle, ballHandle)\n        if Handle2 ~= 0 then\n            sim.setObjectPosition(ball, -1, posS)\n            sim.setObjectOrientation(ball, -1, ang4)\n            break\n        end\n    end \n    if(r2>0 and result>0)then\n        sim.setObjectPosition(ball, -1, posS)\n        sim.setObjectOrientation(ball, -1, ang4)\n        sim.setObjectPosition(bubbleRob1, -1, pos1)\n        sim.setObjectPosition(bubbleRob2, -1, pos2)\n        sim.setObjectPosition(bubbleRob3, -1, pos3)\n        sim.setObjectPosition(bubbleRob4, -1, pos4)\n        sim.setObjectPosition(bubbleRob5, -1, pos5)\n        sim.setObjectPosition(bubbleRob6, -1, pos6)\n        sim.setObjectPosition(bubbleRob7, -1, pos7)\n        sim.setObjectPosition(bubbleRob8, -1, pos8)\n        sim.setObjectOrientation(bubbleRob1, -1, ang3)\n        sim.setObjectOrientation(bubbleRob2, -1, ang1)\n        sim.setObjectOrientation(bubbleRob3, -1, ang1)\n        sim.setObjectOrientation(bubbleRob4, -1, ang4)\n        sim.setObjectOrientation(bubbleRob5, -1, ang2)\n        sim.setObjectOrientation(bubbleRob6, -1, ang2)\n        sim.setObjectOrientation(bubbleRob7, -1, ang2)\n        sim.setObjectOrientation(bubbleRob8, -1, ang2)\n        score1 = score1 + 1\n        r1=r1-36\n        sim.setJointTargetPosition(joint1, math.rad(r1+180))\n        count2=100\n        for go = 0,14,1 do\n            goal = sim.getObject(\'./goal_[\'..go..\']\')\n            sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n        end\n        if(r1==0) then\n            r1=360\n            r2=r2-36\n            sim.setJointTargetPosition(joint1, math.rad(r1+180))\n            sim.setJointTargetPosition(joint2, math.rad(r2+180))\n        end\n        if (score1 <= 9) then\n            i = score1 +1\n            for j = 0, 6, 1 do\n            a = sim.getObject(\'./_R[\'..j..\']\')          \n                if (s[i][j+1] == 1) then\n                    sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                else\n                    sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n        elseif (score1 > 9 and score2<=9) then\n        score1 = 0\n            for j = 0, 6, 1 do\n            a = sim.getObject(\'./_R[\'..j..\']\')          \n                if (s[1][j+1] == 1) then\n                    sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                else\n                    sim.setShapeColor(a, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n            score2 = score2 + 1\n            i = score2 +1\n            for j = 0, 6, 1 do\n            b = sim.getObject(\'./R_[\'..j..\']\')\n                if (s[i][j+1] == 1) then\n                    sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                else\n                    sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n        else\n            sim.pauseSimulation()\n        end    \n    end\n    if (count2>0 and result==0)then\n        count2=count2-1\n        if count2 ==0 then\n            for go = 0,14,1 do\n                local goal = sim.getObject(\'./goal_[\'..go..\']\')\n                sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n            end\n            for i = 0, 8, 1 do\n                if (number == i) then\n                    for j = 0, 6, 1 do\n                        local ng = sim.getObject(\'./nG_[\'..j..\']\')\n                        local n = sim.getObject(\'./N_[\'..j..\']\')\n                        sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        end\n                    end\n                end\n            end\n        end\n    end\n    result2 = sim.readProximitySensor(sensor2)\n    if(r4>0 and result2>0)then\n        sim.setObjectPosition(ball, -1, posS)\n        sim.setObjectOrientation(ball, -1, ang4)\n        sim.setObjectPosition(bubbleRob1, -1, pos1)\n        sim.setObjectPosition(bubbleRob2, -1, pos2)\n        sim.setObjectPosition(bubbleRob3, -1, pos3)\n        sim.setObjectPosition(bubbleRob4, -1, pos4)\n        sim.setObjectPosition(bubbleRob5, -1, pos5)\n        sim.setObjectPosition(bubbleRob6, -1, pos6)\n        sim.setObjectPosition(bubbleRob7, -1, pos7)\n        sim.setObjectPosition(bubbleRob8, -1, pos8)\n        sim.setObjectOrientation(bubbleRob1, -1, ang3)\n        sim.setObjectOrientation(bubbleRob2, -1, ang1)\n        sim.setObjectOrientation(bubbleRob3, -1, ang1)\n        sim.setObjectOrientation(bubbleRob4, -1, ang4)\n        sim.setObjectOrientation(bubbleRob5, -1, ang2)\n        sim.setObjectOrientation(bubbleRob6, -1, ang2)\n        sim.setObjectOrientation(bubbleRob7, -1, ang2)\n        sim.setObjectOrientation(bubbleRob8, -1, ang2)\n        score3 = score3 + 1\n        r3=r3-36\n        sim.setJointTargetPosition(joint3, math.rad(r3+180))\n        count2=100\n        for go = 0,14,1 do\n            goal = sim.getObject(\'./goal_[\'..go..\']\')\n            sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n        end\n        if(r3==0) then\n            r3=360\n            r4=r4-36\n            sim.setJointTargetPosition(joint3, math.rad(r3+180))\n            sim.setJointTargetPosition(joint4, math.rad(r4+180))\n        end\n        if (score3 <= 9) then\n            i = score3 +1\n            for j = 0, 6, 1 do\n                d = sim.getObject(\'./_G[\'..j..\']\')\n                if (s[i][j+1] == 1) then\n                    sim.setShapeColor(d, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                else\n                    sim.setShapeColor(d, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n        elseif (score3 > 9 and score4<=9) then\n            score3 = 0\n            for j = 0, 6, 1 do\n                c = sim.getObject(\'./_G[\'..j..\']\')\n                if (s[1][j+1] == 1) then\n                    sim.setShapeColor(c, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                else\n                    sim.setShapeColor(c, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n            score4 = score4 + 1\n            i = score4 +1\n            for j = 0, 6, 1 do\n                b = sim.getObject(\'./G_[\'..j..\']\')\n                if (s[i][j+1] == 1) then\n                    sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                else\n                    sim.setShapeColor(b, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end         \n        else\n            sim.pauseSimulation()\n        end\n    end\n    if (count2>0 and result2==0)then\n        count2=count2-1\n        if count2 ==0 then\n            for go = 0,14,1 do\n                local goal = sim.getObject(\'./goal_[\'..go..\']\')\n                sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n            end\n            for i = 0, 8, 1 do\n                if (number == i) then\n                    for j = 0, 6, 1 do\n                        local ng = sim.getObject(\'./nG_[\'..j..\']\')\n                        local n = sim.getObject(\'./N_[\'..j..\']\')\n                        sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        end\n                    end\n                end\n            end\n        end\n    end\n    if (count > 0) then\n    score5 = score5 - 1\n    if(score5<1)then\n    score5 = 99\n    count1 = count1-1\n    end\n        if (count1 >= 0) then\n            \n            for i = 0, 9, 1 do\n                if (count1 == i) then\n                    for j = 0, 6, 1 do\n                        local e = sim.getObject(\'./_C[\'..j..\']\')\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        else\n                            sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        end                        \n                    end\n                end\n            end\n        elseif (score6 > 0 and count1 <1) then\n            count1 = 9\n            score6 = score6 - 1\n            for i = 0 , 9, 1 do\n                for j = 0, 6, 1 do\n                    local e = sim.getObject(\'./_C[\'..j..\']\')          \n                    if (s[i+1][j+1] == 1) then\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                    else\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                    end\n                end\n                if (score6 == i) then\n                    for j = 0, 6, 1 do\n                        local f = sim.getObject(\'./C_[\'..j..\']\')\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        else\n                            sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        end                        \n                    end\n                end\n            end\n        elseif (score7 > 0 and score6 < 1) then\n            score5 = 9\n            score6 = 6\n            score7 = score7 - 1\n            for i = 0 , 9, 1 do\n                for j = 0, 6, 1 do\n                    local e = sim.getObject(\'./_C[\'..j..\']\')\n                    local f = sim.getObject(\'./C_[\'..j..\']\')\n                    if (s[i+1][j+1] == 1) then\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                    else\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                    end\n                end\n                if (score7 == i) then\n                    for j = 0, 6, 1 do\n                        local g = sim.getObject(\'./__C[\'..j..\']\')\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        else\n                            sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        end                        \n                    end\n                end\n            end\n        elseif (score8 > 0 and score7 <1) then\n            score5 = 9\n            score6 = 6\n            score7 = 9\n            score8 = score8 - 1\n            for i = 0 , 9, 1 do\n                for j = 0, 6, 1 do\n                    local e = sim.getObject(\'./_C[\'..j..\']\')\n                    local f = sim.getObject(\'./C_[\'..j..\']\')\n                    local g = sim.getObject(\'./__C[\'..j..\']\')\n                    if (s[i+1][j+1] == 1) then\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                    else\n                        sim.setShapeColor(e, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        sim.setShapeColor(f, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        sim.setShapeColor(g, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                    end\n                end\n                if (score8 == i) then\n                    for j = 0, 6, 1 do\n                        local h = sim.getObject(\'./_C_[\'..j..\']\')\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(h, nil, sim.colorcomponent_ambient_diffuse, {0, 0, 0})\n                        else\n                            sim.setShapeColor(h, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                        end\n                    end\n                end\n            end\n        else\n            sim.stopSimulation()\n        end\n    else\n        sim.stopSimulation()\n    end\nend\nfunction setDisplayDigit(number, isgreen)\n    for i = 0, 8, 1 do\n        if (number == i) then\n            for j = 0, 6, 1 do\n                local ng = sim.getObject(\'./nG_[\'..j..\']\')\n                local n = sim.getObject(\'./N_[\'..j..\']\')\n                if isgreen then\n                    sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                    sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                else\n                    sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                    sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                end\n                if (s[i+1][j+1] == 1) then\n                    if isgreen then\n                    sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                    else\n                    sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                    end\n                else    \n                sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n        end\n    end\nend\n', 'tags': '', 'url': '程式.html'}, {'title': '會議記錄', 'text': '\n \n 5/25小組會議  \n 參與成員:林立翔、陳柏成、黃亦銘、蔡淳宇、蕭仲佑、黃柏儒、傅柏皓  \n 會議記錄: 組長林立翔協助組員傅柏皓重新安裝copeliasim以適配小組其他成員的版本  \n 分配蔡淳宇、黃柏儒再次設計球員外觀(球員背號顏色改變)  \n 分配蕭仲佑、陳柏成準備各項元件的CAD檔、場景檔  \n 分配黃亦銘製作PPT，包含網頁上pdf的下載設置\xa0\xa0 \xa0 紀錄人:陳柏成 \n \n 6/1小組會議  \n 參與成員:林立翔、陳柏成、黃亦銘、蔡淳宇、蕭仲佑、黃柏儒、傅柏皓  \n 會議記錄 組長林立翔確認各項進度後，開始分配書面報告內容  \n 分配傅柏皓確立版面配置及報告格式  \n 林立翔、陳柏成負責編輯、整理專案一路以來留下的影片  \n 各成員各自將自己這學期的所做貢獻以圖文方式做成報告等待統整:  \n 林立翔:建設連線環境，設定場景中物件初始位置  \n 陳柏成:建立得分版、計時器，並編寫程式  \n 黃亦銘:場景建模，統整各組員的報告並製作PDF  \n 蔡淳宇:場景、球員設計並建模  \n 蕭仲佑:轉軸式記分版的建立及程式編寫，協助林立翔建設連線環境  \n 黃柏儒:球員設計，協助球員程式編寫  \n 傅柏皓:協助黃亦銘進行報告撰寫，球員程式編寫\xa0 \xa0 \xa0\xa0 紀錄人:陳柏成 \n \n 6/8小組會議 \n 參與成員:林立翔、陳柏成、蔡淳宇、黃柏儒 \n 會議內容 蔡淳宇、黃柏儒在修改球員時copeliaSim出現預期外的錯誤，模型進入模擬後無法正常貼地，在會議上提出後，林立翔、陳柏成加入一起尋找解決辦法 \n 再確定不是模型彼此碰撞擠壓後，林立翔找出改進方案，藉由合理修改各部件質量使模型重量平衡，解決問題 \n 再蔡淳宇、黃柏儒依此法調整完八個球員後，林立翔會在場景中編排球員們的位置。 \n 在蔡淳宇、黃柏儒修改的期間，陳柏成、林立翔討論如何設計出顯示進球球員的方法，還未得出結論，仍有討論空間\xa0 \xa0 \xa0 \xa0\xa0 紀錄人:陳柏成 \n \n \n', 'tags': '', 'url': '會議記錄.html'}, {'title': '下載專區', 'text': '七段顯示計分板.ttt檔 \n 場景.STL檔 \n 七段顯示計時器.ttt檔 \n 計分轉盤建模及場景檔 \n 偵測球員與進球.ttt檔 \n 4v4_cars.ttt檔 \n 車輛控制.rar檔案(含ipv6連接)', 'tags': '', 'url': '下載專區.html'}, {'title': '組員分工內容', 'text': '40723217 林立翔：建設連線環境，整合設定場景物件 40923219 陳柏成：七段顯示器計分板、計時器建模及程式編寫 40923225 黃亦銘：場景建模、統整各組員資料、簡報撰寫 40923241 蔡淳宇：場景建模、球員設計及建模 40923246 蕭仲佑：轉軸式計分板建模及程式編寫，建設連線環境 40723219 黃柏儒：球員設計 40723220 傅柏皓：scite程式編寫，報告撰寫 \n', 'tags': '', 'url': '組員分工內容.html'}, {'title': '40723217-pj3', 'text': '40723217-林立翔-分工內容-整合所有車輛、撰寫得分時回歸指令、設定bubbleRob擋板(防止除球外的物體進入得分區，烏龍球)、分工所有項目、進行測試 \n \n 當球員複製進球場中，我將其進行編排 \n \n --- \n \n 放置一擋板於兩球門前，並使用運動學去阻擋車輛出現烏龍球的狀況。 \n \n --- \n \n 設定位置變數 \n \n 設定得分後bubbleRob各隊員定位，也就是當分數+1時 \n \n 當另一側得分時也進行相同指令，使所有球員回到原位。 \n \n 此控制檔案參照老師給的指令，經由修改而成，在這裡的第16、21、22行將會使用不同的變數進行抓取不同的車輛。 \n \n', 'tags': '', 'url': '40723217-pj3.html'}, {'title': '40923219-pj3', 'text': '場景內的程式編輯，負責部分如下: \n \n 用來編排七段顯示的雙陣列，先設定好得分、計分都用的到 \n \n \n 用上這個for迴圈就能讓七段顯示出想要的樣子 \n S[1]代表要設定的數字是0，隨後的[j+1]代表檢查的位置 \n 檢查每個位置，如果是1就點亮，0則暗掉 \n 用for重復7次後就完成一個七段的顯示 \n \n 得分版，進分檢查後加分，然後把分用剛剛的for迴圈形式七段顯示到計分板上 \n 如果超過9，就改成0然後十位數+1 \n 同理，計時也是如此，只是改成用減的，計時器也是我負責的部分 \n', 'tags': '', 'url': '40923219-pj3.html'}, {'title': '40923225-pj3', 'text': '6/14 \n 報告.pdf \n 簡報.pdf \n 06/08 \n 簡報檔.ppt \n 簡報.pdf \n \n', 'tags': '', 'url': '40923225-pj3.html'}, {'title': '40923241-pj3', 'text': '繪製車車機器人及背號。 \n \n \n 繪製第一部分:機器人球員本體 \n \n \n 繪製第二部分:背號數字 \n \n \n 匯入 CoppeliaSim: \n \n \n 調整大小: \n \n \n 為機器人球員與背號數字分別給予不同的顏色: \n \n \n 與軸、輪子、連接器裝配: \n \n \n 機器人球員本體檔: ^ w ^ \n 1~8號背號檔: Ow〈 \n 1~8號機器人完成組裝場景: O口O \n \n \n \n', 'tags': '', 'url': '40923241-pj3.html'}, {'title': '40923246-pj3', 'text': '轉盤記分板設計 \n all記分板、計數器、轉盤場景 \n 偵測球員與進球顯示板 \n 偵測球員進球之場景 \n \n \n \n \n \n', 'tags': '', 'url': '40923246-pj3.html'}, {'title': '40923246-程式', 'text': '轉盤計分 \n \n function sysCall_init()\nlocal math = require("math")\njoint1= sim.getObject(\'./joint1\')\njoint2= sim.getObject(\'./joint2\')\nball= sim.getObject(\'./ball\')\nsensor = sim.getObject(\'./sensor\')\nr1 = 360\nr2 = 360\nr3 = 360\nr4 = 360\nsim.setJointTargetPosition(joint1, math.rad(r1+180))\nsim.setJointTargetPosition(joint2, math.rad(r2+180))\n\ninitialballPosition = sim.getObjectPosition(ball, -1)\ninitialballOrientation = sim.getObjectOrientation(ball, -1)\nend\nfunction sysCall_actuation()\nresult = sim.readProximitySensor(sensor)\nif(r2>0 and result>0)then\nsim.setObjectPosition(ball, -1, initialballPosition)\nsim.setObjectOrientation(ball, -1, initialballOrientation)\nr1=r1-36\nsim.setJointTargetPosition(joint1, math.rad(r1+180))\nif(r1==0) then\nr1=360\nr2=r2-36\nsim.setJointTargetPosition(joint1, math.rad(r1+180))\nsim.setJointTargetPosition(joint2, math.rad(r2+180))\nend\nend\nend\n \n 顯示碰球球員及進球 \n \n function sysCall_init()\n    sensor = sim.getObject(\'./sensor\')\n    bubbleRobHandles = {}\n    ballHandle = -1\n    ballHandle = sim.getObjectHandle(\'./ball\')\n    number=0\n    isred=0\n    count2=0\n    s0={1,1,1,1,1,0,1}\n    s1={0,0,1,1,0,0,0}\n    s2={0,1,1,0,1,1,1}\n    s3={0,0,1,1,1,1,1}\n    s4={1,0,1,1,0,1,0}\n    s5={1,0,0,1,1,1,1}\n    s6={1,1,0,1,1,1,1}\n    s7={0,0,1,1,1,0,0}\n    s8={1,1,1,1,1,1,1}\n    s9={1,0,1,1,1,1,1}\n    s={s0,s1,s2,s3,s4,s5,s6,s7,s8,s9}\n    for j = 0,6,1 do\n        local ng = sim.getObject(\'./nG_[\'..j..\']\')\n        if (s[1][j+1]==1) then\n            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n        else\n            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n        end\n    end\n    for j = 0,6,1 do\n        local n = sim.getObject(\'./N_[\'..j..\']\')\n            sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n    end\n    for go = 0,14,1 do\n        local goal = sim.getObject(\'./goal_[\'..go..\']\')\n            sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n    end\n    _g_=sim.getObject(\'./_nG_\')\n        sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n    for k = 1, 8 do\n        bubbleRobHandles[k] = sim.getObjectHandle(\'./bubbleRob\'..k)\n    end\nend\nfunction sysCall_actuation()\n    result = sim.readProximitySensor(sensor)\n    for k = 1,8,1 do\n        local Handle = sim.checkCollision(bubbleRobHandles[k], ballHandle)\n        if Handle ~= 0 then\n            number = k\n            setDisplayDigit(k, k <= 4)\n            break\n        end\n    end\n    if result>0 then\n        count2=100\n        for go = 0,14,1 do\n            local goal = sim.getObject(\'./goal_[\'..go..\']\')\n            sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n        end\n    elseif (result==0 and count2 >0) then\n        count2=count2-1\n        if count2 ==0 then\n            for go = 0,14,1 do\n                local goal = sim.getObject(\'./goal_[\'..go..\']\')\n                sim.setShapeColor(goal, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n            end\n            for i = 0, 8, 1 do\n                if (number == i) then\n                    for j = 0, 6, 1 do\n                        local ng = sim.getObject(\'./nG_[\'..j..\']\')\n                        local n = sim.getObject(\'./N_[\'..j..\']\')\n                        sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        if (s[i+1][j+1] == 1) then\n                            sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 0})\n                        end\n                    end\n                end\n            end\n        end\n    end\nend\nfunction setDisplayDigit(number, isgreen)\n    for i = 0, 8, 1 do\n        if (number == i) then\n            for j = 0, 6, 1 do\n                local ng = sim.getObject(\'./nG_[\'..j..\']\')\n                local n = sim.getObject(\'./N_[\'..j..\']\')\n                if isgreen then\n                    sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                    sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                else\n                    sim.setShapeColor(n, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                    sim.setShapeColor(_g_, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                end\n                if (s[i+1][j+1] == 1) then\n                    if isgreen then\n                    sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {0, 1, 0})\n                    else\n                    sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 0, 0})\n                    end\n                else    \n                sim.setShapeColor(ng, nil, sim.colorcomponent_ambient_diffuse, {1, 1, 1})\n                end\n            end\n        end\n    end\nend\n', 'tags': '', 'url': '40923246-程式.html'}, {'title': '40971219-pj3', 'text': '球員設計 \n', 'tags': '', 'url': '40971219-pj3.html'}, {'title': '40971220-pj3', 'text': 'scite程式編寫 \n \n', 'tags': '', 'url': '40971220-pj3.html'}, {'title': 'Brython', 'text': 'https://en.wikipedia.org/wiki/Python_(programming_language) \n Examples: \n https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d \n https://www.geeksforgeeks.org/python-programming-examples/ \n https://www.programiz.com/python-programming/examples \n https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/ \n Python Tutorial: \n https://docs.python.org/3/tutorial/ \n An informal introduction to Python \n Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍) \n Variables ( Python Keywords ) \n Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解) \n Numbers  (整數 int(), 浮點數 float()) \n Strings  (字串) \n print (Python 內建函式,  print()  函式) \n Python control flow tools \n for \n if \n range \n open \n read \n lists \n tuples \n dictionaries \n functions \n try ... except \n break \n pass \n classes \n 這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 ( practice_html.txt  動態頁面超文件). \n practice_html.txt  動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用. \n 亦即將所有對應的 html 也使用 Brython 產生, 然後寫為  class  後, 在範例導入時透過  instance  引用. \n <!-- 啟動 Brython -->\n<script>\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\',\'./../downloads/py/\']});\n}\n</script> \n 從 1 累加到 100: \n 1 add to 100 \n 將 iterable 與 iterator  相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'Brython.html'}, {'title': 'Brython_ex2', 'text': 'This code uses the Euler method to approximate the solution to the ODE dy/dx = x - y with an initial condition of y0 = 1.0. The solution is calculated for a range of x values from 0 to 5. \n \n \n \n \n Solve ODE: \n from browser import document\n\ndef dy_dx(y, x):\n    return x - y\n\nx_start = 0\nx_end = 5\nn_points = 100\nx = [x_start + i * (x_end - x_start) / (n_points - 1) for i in range(n_points)]\ny0 = 1.0\nh = x[1] - x[0]\ny = [y0]\nfor i in range(1, len(x)):\n    y.append(y[-1] + h * dy_dx(y[-1], x[i-1]))\n\n# Create a new paragraph element and set its text content to the solution\np = document.createElement(\'p\')\np.textContent = f"The solution to the ODE is: {y}"\n\n# Append the paragraph element to the body of the webpage\ndocument.body.appendChild(p) \n \n \n \n \n \n Brython environment and  Plotly.js : \n <script src="./../cmsimde/static/brython.js"></script>\n<script src="./../cmsimde/static/brython_stdlib.js"></script>\n<script>// <![CDATA[\nwindow.onload=function(){\nbrython({debug:1, pythonpath:[\'./../cmsimde/static/\']});\n}\n// ]]></script>\n<p id="brython_div"></p> \n Brython programe with Plotly.js: \n from browser import document, window\n\ndef dy_dx(y, x):\n    return x - y\n\nx_start = 0\nx_end = 5\nn_points = 100\nx = [x_start + i * (x_end - x_start) / (n_points - 1) for i in range(n_points)]\ny0 = 1.0\nh = x[1] - x[0]\ny = [y0]\nfor i in range(1, len(x)):\n    y.append(y[-1] + h * dy_dx(y[-1], x[i-1]))\n\n# Create a new div element to hold the plot\n#plot_div = document.createElement(\'div\')\n#plot_div.id = \'plot\'\n#document.body.appendChild(plot_div)\nplot_div = document["brython_div"]\n\n# Plot the solution using plotly.js\ndata = [{\'x\': x, \'y\': y}]\nwindow.Plotly.newPlot(\'brython_div\', data) \n This code defines a function dy_dx that represents the mass-spring-damper ordinary differential equation. The Euler method is used to solve this equation for a range of x values from 0 to 20 with initial conditions of y0 = [1.0, 0.0]. The solution is then plotted on the webpage using  plotly.js . \n \n \n This code defines a function dy_dx that represents the mass-spring-damper system with a PID controller. The gains of the PID controller are set to Kp = 10.0, Ki = 1.0, and Kd = 0.5. The Euler method is used to solve this system of equations for a range of x values from 0 to 20 with initial conditions of y0 = [0.0, 0.0, 0.0, 0.0]. The response of the system is then plotted on the webpage using  plotly.js . \n \n \n \n \n \n \n \n STL part viewer \n \n \n Using  sine-cosine algorithm  to optimize with constraints in Brython: \n <!DOCTYPE html>\n<html>\n<head>\n    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/brython@3/dist/brython_stdlib"></script>\n</head>\n<body onload="brython()">\n\n<div id="output"></div>\n\n<script type="text/python">\nfrom browser import document\nfrom random import random, uniform\nfrom math import sin, cos, pi\n\n# Define the objective function\ndef objective_function(x):\n    return x[0]**2 + x[1]**2\n\n# Define the constraint functions\ndef constraint1(x):\n    return x[0] + x[1] - 2\n\ndef constraint2(x):\n    return 1 - x[0] - x[1]\n\n# Define the penalty function\ndef penalty_function(x):\n    penalty = 0\n    if constraint1(x) > 0:\n        penalty += constraint1(x)\n    if constraint2(x) > 0:\n        penalty += constraint2(x)\n    return penalty\n\n# Define the fitness function\ndef fitness_function(x):\n    return objective_function(x) + penalty_function(x)\n\n# Define the sine cosine algorithm\ndef sine_cosine_algorithm(fitness_function, dimension, lower_bound, upper_bound, population_size, max_iterations):\n    # Initialize the population\n    population = [[uniform(lower_bound, upper_bound) for _ in range(dimension)] for _ in range(population_size)]\n    population_fitness = [fitness_function(individual) for individual in population]\n\n    # Initialize the best solution\n    best_solution = population[0]\n    best_fitness = population_fitness[0]\n\n    # Main loop of the algorithm\n    for iteration in range(max_iterations):\n        # Calculate the value of a and r1\n        a = 2 - iteration * (2 / max_iterations)\n        r1 = 2 * pi * random()\n\n        # Update the population\n        for i in range(population_size):\n            # Calculate the value of r2, r3 and r4\n            r2 = 2 * random()\n            r3 = 2 * random()\n            r4 = random()\n\n            # Update the individual\n            for j in range(dimension):\n                if r4 < 0.5:\n                    population[i][j] += r1 * sin(r2) * abs(r3 * best_solution[j] - population[i][j])\n                else:\n                    population[i][j] += r1 * cos(r2) * abs(r3 * best_solution[j] - population[i][j])\n\n                # Make sure the individual is within the bounds\n                if population[i][j] < lower_bound:\n                    population[i][j] = lower_bound\n                elif population[i][j] > upper_bound:\n                    population[i][j] = upper_bound\n\n            # Calculate the fitness of the individual\n            population_fitness[i] = fitness_function(population[i])\n\n            # Update the best solution\n            if population_fitness[i] < best_fitness:\n                best_solution = population[i]\n                best_fitness = population_fitness[i]\n\n        # Print the current iteration and best fitness\n        print(f\'Iteration: {iteration + 1}, Best Fitness: {best_fitness:.6f}\')\n\n    return best_solution\n\n# Run the sine cosine algorithm to solve the optimization problem with constraints\nbest_solution = sine_cosine_algorithm(fitness_function, dimension=2, lower_bound=-10, upper_bound=10, population_size=50, max_iterations=100)\n\n# Print the result\noutput_div = document[\'output\']\noutput_div.text = f\'Best Solution: {best_solution}\'\n</script>\n\n<script src="https://cdn.jsdelivr.net/npm/brython@3/dist/brython"></script>\n</body>\n</html> \n Plot the result by using  plotly.js : \n <!DOCTYPE html>\n<html>\n<head>\n    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/brython@3/dist/brython_stdlib"></script>\n    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>\n</head>\n<body onload="brython()">\n\n<div id="output"></div>\n<div id="plot"></div>\n\n<script type="text/python">\nfrom browser import document\nfrom random import random, uniform\nfrom math import sin, cos, pi\n\n# Define the objective function\ndef objective_function(x):\n    return x[0]**2 + x[1]**2\n\n# Define the constraint functions\ndef constraint1(x):\n    return x[0] + x[1] - 2\n\ndef constraint2(x):\n    return 1 - x[0] - x[1]\n\n# Define the penalty function\ndef penalty_function(x):\n    penalty = 0\n    if constraint1(x) > 0:\n        penalty += constraint1(x)\n    if constraint2(x) > 0:\n        penalty += constraint2(x)\n    return penalty\n\n# Define the fitness function\ndef fitness_function(x):\n    return objective_function(x) + penalty_function(x)\n\n# Define the sine cosine algorithm\ndef sine_cosine_algorithm(fitness_function, dimension, lower_bound, upper_bound, population_size, max_iterations):\n    # Initialize the population\n    population = [[uniform(lower_bound, upper_bound) for _ in range(dimension)] for _ in range(population_size)]\n    population_fitness = [fitness_function(individual) for individual in population]\n\n    # Initialize the best solution\n    best_solution = population[0]\n    best_fitness = population_fitness[0]\n\n    # Main loop of the algorithm\n    for iteration in range(max_iterations):\n        # Calculate the value of a and r1\n        a = 2 - iteration * (2 / max_iterations)\n        r1 = 2 * pi * random()\n\n        # Update the population\n        for i in range(population_size):\n            # Calculate the value of r2, r3 and r4\n            r2 = 2 * random()\n            r3 = 2 * random()\n            r4 = random()\n\n            # Update the individual\n            for j in range(dimension):\n                if r4 < 0.5:\n                    population[i][j] += r1 * sin(r2) * abs(r3 * best_solution[j] - population[i][j])\n                else:\n                    population[i][j] += r1 * cos(r2) * abs(r3 * best_solution[j] - population[i][j])\n\n                # Make sure the individual is within the bounds\n                if population[i][j] < lower_bound:\n                    population[i][j] = lower_bound\n                elif population[i][j] > upper_bound:\n                    population[i][j] = upper_bound\n\n            # Calculate the fitness of the individual\n            population_fitness[i] = fitness_function(population[i])\n\n            # Update the best solution\n            if population_fitness[i] < best_fitness:\n                best_solution = population[i]\n                best_fitness = population_fitness[i]\n\n        # Print the current iteration and best fitness\n        print(f\'Iteration: {iteration + 1}, Best Fitness: {best_fitness:.6f}\')\n\n    return best_solution\n\n# Run the sine cosine algorithm to solve the optimization problem with constraints\nbest_solution = sine_cosine_algorithm(fitness_function, dimension=2, lower_bound=-10, upper_bound=10, population_size=50, max_iterations=100)\n\n# Print the result\noutput_div = document[\'output\']\noutput_div.text = f\'Best Solution: {best_solution}\'\n\n# Plot the result using Plotly.js\ndata = [\n    {\n        \'x\': [best_solution[0]],\n        \'y\': [best_solution[1]],\n        \'mode\': \'markers\',\n        \'marker\': {\'size\': 12},\n        \'name\': \'Best Solution\'\n    }\n]\n\nlayout = {\n    \'xaxis\': {\'range\': [-10, 10]},\n    \'yaxis\': {\'range\': [-10, 10]},\n}\n\nPlotly.newPlot(\'plot\', data, layout)\n</script>\n\n<script src="https://cdn.jsdelivr.net/npm/brython@3/dist/brython"></script>\n</body>\n</html> \n', 'tags': '', 'url': 'Brython_ex2.html'}]};